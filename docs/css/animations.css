/*
 * SyntharaAI Premium Animations
 * Refined, minimalist transitions for scroll-based reveal
 */

:root {
  --transition-duration: 0.6s;
  --transition-timing: cubic-bezier(0.16, 1, 0.3, 1);
  --transition-delay-base: 0.05s;
  --transition-delay-increment: 0.05s;
  --fade-start-opacity: 0;
  --fade-end-opacity: 1;
  --scale-start: 0.997;
  --scale-end: 1;
  --blur-amount: 2px;
}

/* Animation base classes - blurry to active transitions */
.reveal-element {
  opacity: var(--fade-start-opacity);
  filter: blur(var(--blur-amount));
  transition: opacity var(--transition-duration) var(--transition-timing),
              filter var(--transition-duration) var(--transition-timing);
  will-change: opacity, filter;
}

.reveal-scale {
  opacity: var(--fade-start-opacity);
  filter: blur(var(--blur-amount));
  transform: scale(var(--scale-start));
  transition: opacity var(--transition-duration) var(--transition-timing),
              filter var(--transition-duration) var(--transition-timing),
              transform var(--transition-duration) var(--transition-timing);
  will-change: opacity, filter, transform;
}

.reveal-fade {
  opacity: var(--fade-start-opacity);
  filter: blur(var(--blur-amount));
  transition: opacity var(--transition-duration) var(--transition-timing),
              filter var(--transition-duration) var(--transition-timing);
  will-change: opacity, filter;
}

/* Revealed state */
.revealed {
  opacity: var(--fade-end-opacity);
  filter: blur(0);
  transform: translateY(0) scale(var(--scale-end));
}

/* Staggered animations for child elements - blurry to active */
.stagger-children > * {
  opacity: var(--fade-start-opacity);
  filter: blur(var(--blur-amount));
  transition: opacity var(--transition-duration) var(--transition-timing),
              filter var(--transition-duration) var(--transition-timing);
}

.stagger-children.revealed > *:nth-child(1) {
  transition-delay: var(--transition-delay-base);
}

.stagger-children.revealed > *:nth-child(2) {
  transition-delay: calc(var(--transition-delay-base) + var(--transition-delay-increment));
}

.stagger-children.revealed > *:nth-child(3) {
  transition-delay: calc(var(--transition-delay-base) + (var(--transition-delay-increment) * 2));
}

.stagger-children.revealed > *:nth-child(4) {
  transition-delay: calc(var(--transition-delay-base) + (var(--transition-delay-increment) * 3));
}

.stagger-children.revealed > *:nth-child(n+5) {
  transition-delay: calc(var(--transition-delay-base) + (var(--transition-delay-increment) * 4));
}

.stagger-children.revealed > * {
  opacity: var(--fade-end-opacity);
  filter: blur(0);
}

/* Section-specific animations */
.hero-content {
  position: relative;
}

/* Parallax effect */
.parallax {
  transition: transform 0.6s cubic-bezier(0.16, 1, 0.3, 1);
  will-change: transform;
}

.parallax-slow {
  --parallax-speed: 0.03;
}

.parallax-medium {
  --parallax-speed: 0.06;
}

.parallax-fast {
  --parallax-speed: 0.09;
}

/* Subtle background animations */
.bg-gradient {
  background: linear-gradient(135deg, #2A2A2A, #404040);
  background-size: 200% 200%;
  animation: gradientShift 20s ease infinite;
}

@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Text reveal animation */
.text-reveal {
  display: inline-block;
  position: relative;
  overflow: hidden;
}

.text-reveal::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
  background: var(--primary-color);
  transform: translateX(-100%);
  transition: transform 0.8s var(--transition-timing);
  z-index: 1;
}

.text-reveal.revealed::after {
  transform: translateX(100%);
}

.text-reveal span {
  opacity: 0;
  transition: opacity 0.3s ease;
  transition-delay: 0.4s;
}

.text-reveal.revealed span {
  opacity: 1;
}

/* Component highlight animation */
.highlight-border {
  position: relative;
}

.highlight-border::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background: transparent;
  border-bottom: 1px solid var(--primary-color);
  transition: width 0.7s var(--transition-timing);
}

.highlight-border.revealed::before {
  width: 100%;
}

/* Scroll progress indicator - more subtle */
.scroll-progress {
  position: fixed;
  top: 0;
  left: 0;
  width: 0%;
  height: 1px;
  background: var(--primary-color);
  opacity: 0.5;
  z-index: 1000;
  transition: width 0.05s linear;
}
